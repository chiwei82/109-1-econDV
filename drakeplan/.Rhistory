remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
remotes::install_github(
"tpemartin/econDV",
auth_token = .ghToken, force =T
)
ggLinePoint={
ggline +
geom_point(
mapping=aes(x=西元年月,y=`定存利率-一個月-固定`),
subsetDataTWbank
)
}
ggLinePoint={
ggline +
geom_point(
mapping=aes(x=西元年月,y=`定存利率-一個月-固定`),
subsetDataTWbank
)
}
ggLinePoint
knitr::opts_chunk$set(echo = TRUE, eval=F)
library(drake)
library(econDV)
library(dplyr)
econDV::setup_chinese
library(econDV)
econDV::setup_chinese(need2Knit = F)
library(dplyr)
library(tidyr)
library(stringr)
library(googledrive)
library(readr)
library(ggplot2)
library(econDV)
econDV::setup_chinese(need2Knit = F)
rprojroot::is_rstudio_project -> .pj
.pj$make_fix_file() -> .root
imageFolder <- file.path(.root(),"img")
dataFolder <- file.path(.root(),"data")
if(!dir.exists(imageFolder)) dir.create(imageFolder)
if(!dir.exists(dataFolder)) dir.create(dataFolder)
library(dplyr)
library(tidyr)
library(stringr)
library(googledrive)
library(readr)
library(ggplot2)
library(econDV)
econDV::setup_chinese(need2Knit = F)
rprojroot::is_rstudio_project -> .pj
.pj$make_fix_file() -> .root
imageFolder <- file.path(.root(),"img")
dataFolder <- file.path(.root(),"data")
if(!dir.exists(imageFolder)) dir.create(imageFolder)
if(!dir.exists(dataFolder)) dir.create(dataFolder)
library(readr)
library(ggplot2)
library(drake)
library(rmd2drake)
library(dplyr)
library(showtext)
library(stringr)
font_families_google() %>%
stringr::str_subset(regex("noto", ignore_case = T))
font_add_google("Noto Sans TC")
library(dplyr)
library(tidyr)
library(stringr)
library(googledrive)
library(readr)
library(ggplot2)
library(econDV)
econDV::setup_chinese(need2Knit = F)
rprojroot::is_rstudio_project -> .pj
.pj$make_fix_file() -> .root
imageFolder <- file.path(.root(),"img")
dataFolder <- file.path(.root(),"data")
if(!dir.exists(imageFolder)) dir.create(imageFolder)
if(!dir.exists(dataFolder)) dir.create(dataFolder)
myggplot = {
canvas ={
ggplot()
}
}
font.
font.families.google()
font.families()
econDV::setup_chinese(need2Knit = F)
myggplot
library(jsonlite)
exhibition <- fromJSON("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6")
View(exhibition)
exhibition$latitude
View(exhibition)
exhibition$showInfo
exhibition$showInfo$latitude
View(exhibition[[5]][[1]])
income <- fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=44218&md5_url=5108938196a413ee42cca40b2e599084")
income
income %>% View()
income$Item_VALUE %>% class()
subset_of_income = {
income %>%
mutate(
income$Item_VALUE = as.integer(income$Item_VALUE)
)
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)")
}
income %>%
mutate(
income$Item_VALUE = as.integer(income$Item_VALUE)
)
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
income %>% View()
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
income %>%
mutate(
income$Item_VALUE = as.integer(income$Item_VALUE)
)
income %>%
mutate( {income$Item_VALUE = as.integer(income$Item_VALUE)} )
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
income %>%
mutate( {income$Item_VALUE = as.integer(income$Item_VALUE)} )
income$Item_VALUE %>% class()
income$Item_VALUE = as.integer(income$Item_VALUE)
income$Item_VALUE %>% class()
income$Item_VALUE
income  %>% view
income  %>% View()
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
income$Item
View(income)
income[income[[1]]== "國內生產毛額GDP(名目值，百萬元)"]
income[1]
income[1][income[1] == "國內生產毛額GDP(名目值，百萬元)"]
income[income[1] == "國內生產毛額GDP(名目值，百萬元)"]
temp <- income[income[1] == "國內生產毛額GDP(名目值，百萬元)"]
temp %>% View()
income %>% class()
temp <- income$TIME_PERIOD[income[1] == "國內生產毛額GDP(名目值，百萬元)"]
temp
temp <- income$TIME_PERIOD[income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"]
temp
View(income)
TIME_PERIOD <- income$TIME_PERIOD[income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"]
TIME_PERIOD
View(income)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
Item_VALUE
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = list(Item_VALUE = Item_VALUE,TIME_PERIOD = TIME_PERIOD )
subset_of_income %>% View()
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
subset_of_income %>% View()
income <- fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=44218&md5_url=5108938196a413ee42cca40b2e599084")
myggplot = {
canvas ={
ggplot()
}
}
income$Item_VALUE = as.integer(income$Item_VALUE)
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
subset_of_income
ggline <- {
canvas +
geom_line(
aes(x = `年`, y = `國內生產毛額GDP(名目值，百萬元)` ),
subset_of_income
)
}
ggline
income$Item_VALUE = as.integer(income$Item_VALUE)
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
income$Item_VALUE = as.integer(income$Item_VALUE)
str_extract_all(income, Item == "國內生產毛額GDP(名目值，百萬元)") -> temp
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
income$Item_VALUE = as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
myggplot = {
canvas ={
ggplot()
}
}
income$Item_VALUE = as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
income <- fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=44218&md5_url=5108938196a413ee42cca40b2e599084")
income$Item_VALUE = as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
ggline <- {
canvas +
geom_line(
aes(x = `年`, y = `國內生產毛額GDP(名目值，百萬元)` ),
subset_of_income
)
}
ggline
subset_of_income
ggline <- {
canvas +
geom_line(
aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
ggline
ggpath <- {
canvas +
geom_path(
aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
ggpath
ggpath <- {
canvas +
geom_path(
lineend="butt", linejoin="round", linemitre=1,
aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
ggpath
subset_of_income
ggpath <- {
canvas +
geom_point(
aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
ggpath
subset_of_income$年
subset_of_income$年[2:10]
subset_of_income$年 %>% class()
subset_of_income$年 %>% class()
str_extract(subset_of_income,"^1951$" | "^2001$" | "2019")
str_extract(subset_of_income,["^1951$" | "^2001$" | "2019"])
str_extract(subset_of_income,("^1951$" | "^2001$" | "2019")
2
str_extract(subset_of_income,("^1951$" | "^2001$" | "2019"))
regex = "^1951$" | "^2001$" | "2019"
regex = "^1951$" | "^2001$" | "2019"
income$Item_VALUE <- as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
income <- fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=44218&md5_url=5108938196a413ee42cca40b2e599084")
myggplot = {
canvas ={
ggplot()
}
}
income$Item_VALUE <- as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, eval=F)
library(drake)
library(econDV)
library(dplyr)
font_families_google() %>%
stringr::str_subset(regex("noto", ignore_case = T))
font_add_google("Noto Sans TC")
# Chunk 2: makecondition
library(dplyr)
library(tidyr)
library(stringr)
library(googledrive)
library(readr)
library(ggplot2)
library(econDV)
rprojroot::is_rstudio_project -> .pj
.pj$make_fix_file() -> .root
imageFolder <- file.path(.root(),"img")
dataFolder <- file.path(.root(),"data")
if(!dir.exists(imageFolder)) dir.create(imageFolder)
if(!dir.exists(dataFolder)) dir.create(dataFolder)
# Chunk 3: datadownload
income <- fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=44218&md5_url=5108938196a413ee42cca40b2e599084")
# Chunk 4: myggplot
myggplot = {
canvas ={
ggplot()
}
}
# Chunk 5: subset_of_income
income$Item_VALUE <- as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income = data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
# Chunk 6: ggpath
ggpath <- {
canvas +
geom_point(
aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
# Chunk 7
# Chunk 8
# Chunk 9
# Chunk 10: save_ggplot
save_ggplot = {
ggsave(
plot=myggplot,
filename=file.path(imageFolder, "myPlot.svg"),
width = 8,
height = 5
)
}
ggpath
{
income$Item_VALUE <- as.integer(income$Item_VALUE)
pick <- income$Item == "國內生產毛額GDP(名目值，百萬元)" & income$TYPE == "原始值"
Item_VALUE <- income$Item_VALUE[pick]
TIME_PERIOD <- income$TIME_PERIOD[pick]
subset_of_income <- data.frame(
`年` = TIME_PERIOD ,
`國內生產毛額GDP(名目值，百萬元)` = Item_VALUE
)
}
ggpath <- {
myggplot +
geom_point(
mapping =  aes(x = `年`, y = `國內生產毛額GDP.名目值.百萬元.`  ),
subset_of_income
)
}
ggpath
